function newGame(){first_question=!0,lancerLesQuestions=setInterval(sendQuestion,tempsParQuestion)}function sendQuestion(){if(first_question!==!0?(updateScore(),io.emit("scores_partie",scores)):first_question=!1,reponses=[],questionsUtilisees.length<questionsParPartie)question=chooseQuestion(question),io.emit("new_question",{question:question,temps:tempsParQuestion,numero:questionsUtilisees.length});else{clearInterval(lancerLesQuestions);{setTimeout(newGame,tempsEntreParties)}for(io.emit("waiting_next_game",tempsEntreParties),questionsUtilisees=[],fs.writeFile(__dirname+"/ressources/data/partie_precedente.json",JSON.stringify(scores,null,4),function(err){if(err)throw err}),io.emit("partie_precedente",scores),io.emit,i=0;i<scores.length;++i)scores[i].score=0,scores[i].combo=0,scores[i].answered=0}}function chooseQuestion(question){if(question=questions[Math.floor(Math.random()*questions.length)],questionsUtilisees.indexOf(question)>-1)for(;questionsUtilisees.indexOf(question)>-1;)question=questions[Math.floor(Math.random()*questions.length)];return questionsUtilisees.push(question),question}function updateScore(){fs.readFile(__dirname+"/ressources/data/scores_semaine.json",function(err,data){if(err)throw err;jsonScores=JSON.parse(data)},"json");var totalScores=scores.length,totalAnswers=reponses.length,totalJsonScores=jsonScores.length,answerCount=[[0,1],[0,2],[0,3],[0,4]];for(i=0;totalAnswers>i;++i)switch(reponses[i].id){case 1:++answerCount[0][0];break;case 2:++answerCount[1][0];break;case 3:++answerCount[2][0];break;case 4:++answerCount[3][0]}answerCount.sort(function(a,b){return b[0]-a[0]});var ratio_first_answer=answerCount[0][1]/totalAnswers,ratio_second_answer=answerCount[1][1]/totalAnswers;if(totalAnswers>=6&&.5>ratio_first_answer&&ratio_second_answer>=.2)for(i=0;totalScores>i;++i){var idsArray=seekMatchingEntries(i,totalJsonScores,totalAnswers),idRep=idsArray[0],idJson=idsArray[1];scores[i].answered=!1,-1!=idRep&&-1!==idJson?(answerCount[0][0]!==answerCount[1][0]?reponses[idRep].id==answerCount[0][1]&&(scores[i].score+=2,jsonScores[idJson].score+=2,++scores[i].combo,addComboToScore(i,idJson)):console.log("Egalité 1e rep (mode massif)"),answerCount[0][0]!==answerCount[1][0]&&answerCount[1][0]!==answerCount[2][0]?reponses[idRep].id==answerCount[1][1]&&(++scores[i].score,++jsonScores[idJson].score,scores[i].combo=0):console.log("Egalité 2e rep (mode massif)"),(reponses[idRep].id!=answerCount[1][1]||reponses[idRep].id!=answerCount[0][1])&&(scores[i].combo=0)):scores[i].combo=0}else if(answerCount[0][0]!==answerCount[1][0])for(i=0;totalScores>i;++i){var idsArray=seekMatchingEntries(i,totalJsonScores,totalAnswers),idRep=idsArray[0],idJson=idsArray[1];-1!==idRep&&-1!==idJson?reponses[idRep].id==answerCount[0][1]?(++scores[i].score,++jsonScores[idJson].score,++scores[i].combo,addComboToScore(i,idJson)):scores[i].combo=0:scores[i].combo=0}else console.log("Egalité 1e rep (mode privé)");fs.writeFile(__dirname+"/ressources/data/scores_semaine.json",JSON.stringify(jsonScores,null,4),function(err){if(err)throw err})}function addComboToScore(arrayID,jsonID){scores[arrayID].combo>0&&scores[arrayID].combo%2==0&&(scores[arrayID].score+=scores[arrayID].combo/2-1,jsonScores[jsonID].score+=scores[arrayID].combo/2-1)}function seekMatchingEntries(idScore,totalJson,totalAns){for(var idRep=-1,idJson=-1,jsonProcessed=!1,reponseProcessed=!1,y=0;!0&&(jsonProcessed||(y>=totalJson?(jsonScores.push({pseudo:scores[idScore].pseudo,score:0,idJoueur:scores[idScore].idJoueur,photo:scores[idScore].photo}),idJson=totalJson,jsonProcessed=!0):scores[idScore].idJoueur===jsonScores[y].idJoueur&&(idJson=y,jsonProcessed=!0)),reponseProcessed||(y>=totalAns?reponseProcessed=!0:scores[idScore].idJoueur===reponses[y].idJoueur&&(idRep=y,reponseProcessed=!0)),!reponseProcessed||!jsonProcessed);++y);return[idRep,idJson]}var express=require("express"),fs=require("fs"),app=express(),server=require("http").createServer(app),io=require("socket.io").listen(server),cookieParser=require("cookie-parser")(),session=require("cookie-session")({secret:"majority is the key"});app.use(cookieParser),app.use(session),io.use(function(socket,next){var req=socket.handshake,res={};cookieParser(req,res,function(){session(req,res,next)})});var passport=require("passport"),GoogleStrategy=require("passport-google-oauth").OAuth2Strategy,FacebookStrategy=require("passport-facebook").Strategy,TwitterStrategy=require("passport-twitter").Strategy;app.use(passport.initialize()),passport.use(new GoogleStrategy({clientID:"498837580813-rm7m49o80e2l2gss6lrm2q75bbdftl2g.apps.googleusercontent.com",clientSecret:"F8IxXj02PC5fPIzmSLJivMsA",callbackURL:"http://127.0.0.1:8080/auth/google/callback",profileFields:["id","displayName","photos"]},function(req,accessToken,refreshToken,profile,done){profile.photos=[],profile.photos.push({value:profile._json.picture}),done(null,profile)})),app.get("/auth/google",passport.authenticate("google",{scope:"https://www.googleapis.com/auth/plus.login"})),app.get("/auth/google/callback",passport.authenticate("google",{failureRedirect:"/"}),function(req,res){res.redirect("/")}),passport.use(new FacebookStrategy({clientID:"812477628788555",clientSecret:"4408c18ddbb035e900170c0c5c6867b1",callbackURL:"http://localhost:8080/auth/facebook/callback",profileFields:["id","displayName","photos"]},function(req,accessToken,refreshToken,profile,done){done(null,profile)})),app.get("/auth/facebook",passport.authenticate("facebook")),app.get("/auth/facebook/callback",passport.authenticate("facebook",{failureRedirect:"/"}),function(req,res){res.redirect("/")}),passport.use(new TwitterStrategy({consumerKey:"teeqDZxvDxJHj1tx5A67PPoEk",consumerSecret:"fILFhYATWUUnoU64lhFFHXjO2nVZgRKHXHTfsZZySnx3qbpSKQ",callbackURL:"http://127.0.0.1:8080/auth/twitter/callback",profileFields:["id","displayName","photos"]},function(req,accessToken,refreshToken,profile,done){done(null,profile)})),app.get("/auth/twitter",passport.authenticate("twitter")),app.get("/auth/twitter/callback",passport.authenticate("twitter",{failureRedirect:"/"}),function(req,res){res.redirect("/")}),passport.serializeUser(function(user,done){user={provider:user.provider,idJoueur:user.id,pseudo:user.displayName,photo:user.photos[0].value},done(null,user)}),passport.deserializeUser(function(user,done){done(null,user)}),app.get("/logout",function(req,res){req.logout(),res.redirect("/")});var question={},questionsUtilisees=[],questions=[],questionsParPartie=10,tempsParQuestion=8e3,tempsEntreParties=1e4,lancerLesQuestions=null,scores=[],reponses=[],first_question=!0,jsonScores=[];fs.readFile(__dirname+"/ressources/data/questions.json",function(err,data){if(err)throw err;questions=JSON.parse(data)}),app.get("/",function(req,res){res.sendFile(__dirname+"/views/index.html")}),app.use(express.static(__dirname+"/ressources")),io.on("connection",function(socket){socket.on("new_client",function(){if(void 0===socket.handshake.session.passport.user)socket.pseudo="Anonyme "+(scores.length+1),socket.idJoueur=scores.length+1,socket.photo="/images/logo.png",scores.push({pseudo:socket.pseudo,score:0,idJoueur:socket.idJoueur,combo:0,photo:socket.photo,answered:!1}),socket.idarray=scores.length-1;else{socket.pseudo=socket.handshake.session.passport.user.pseudo,socket.idJoueur=socket.handshake.session.passport.user.idJoueur,socket.photo=socket.handshake.session.passport.user.photo;for(var youshallnotpass=!1,i=0;i<scores.length;++i)if(scores[i].idJoueur===socket.idJoueur){youshallnotpass=!0;break}-1!==scores.indexOf(socket.handshake.session.passport.user.idJoueur)||youshallnotpass||scores.push({pseudo:socket.pseudo,score:0,idJoueur:socket.idJoueur,combo:0,photo:socket.photo,answered:!1}),socket.idarray=scores.length-1}socket.emit("pseudo_joueur",socket.pseudo),socket.emit("scores_partie",scores)}),socket.on("answer",function(idReponse){(void 0===socket.pseudo||void 0===socket.idJoueur)&&(socket.pseudo="Anonyme"+(scores.length+1),socket.idJoueur=scores.length+1,socket.photo="/images/logo.png",scores.push({pseudo:socket.pseudo,score:0,idJoueur:socket.idJoueur,combo:0,photo:socket.photo,answered:!1}),socket.idarray=scores.length-1),scores[socket.idarray].answered===!1&&(reponses.push({id:idReponse,pseudo:socket.pseudo,idJoueur:socket.idJoueur,photo:socket.photo}),scores[socket.idarray].answered=!0,io.emit("joueurs_par_reponses",reponses))})}),newGame(),server.listen(8080);